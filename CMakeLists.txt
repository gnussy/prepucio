# this is the build file for project prepucio
# it is autogenerated by the xmake build system.
# do not edit by hand.

# project
cmake_minimum_required(VERSION 3.15.0)
cmake_policy(SET CMP0091 NEW)
project(prepucio VERSION 1.0.0 LANGUAGES CXX C)

# target
add_executable(example_counter "")
set_target_properties(example_counter PROPERTIES OUTPUT_NAME "example_counter")
set_target_properties(example_counter PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/linux/x86_64/release")
add_dependencies(example_counter prepucio-lib)
target_include_directories(example_counter PRIVATE
    include
)
target_include_directories(example_counter PRIVATE
    /home/danielboll/.xmake/packages/f/fmt/9.1.0/d363b063d73b40728217e45838c2553c/include
    /home/danielboll/.xmake/packages/p/penis/v1.1.0/ad71be78bd154883a6a79f2010a449b5/include
    /home/danielboll/.xmake/packages/t/tabulate/1.4/f332da4973a7470eb1f7ff02b32fe5d6/include
)
target_compile_options(example_counter PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
    $<$<COMPILE_LANGUAGE:C>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-DNDEBUG>
)
set_target_properties(example_counter PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(example_counter PRIVATE cxx_std_20)
if(MSVC)
    target_compile_options(example_counter PRIVATE $<$<CONFIG:Release>:-Ox -fp:fast>)
else()
    target_compile_options(example_counter PRIVATE -O3)
endif()
if(MSVC)
else()
    target_compile_options(example_counter PRIVATE -fvisibility=hidden)
endif()
if(MSVC)
    set_property(TARGET example_counter PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(example_counter PRIVATE
    fmt
    penis-lib
    prepucio-lib
)
target_link_directories(example_counter PRIVATE
    /home/danielboll/.xmake/packages/f/fmt/9.1.0/d363b063d73b40728217e45838c2553c/lib
    /home/danielboll/.xmake/packages/p/penis/v1.1.0/ad71be78bd154883a6a79f2010a449b5/lib
    build/linux/x86_64/release
)
target_link_options(example_counter PRIVATE
    -m64
)
target_sources(example_counter PRIVATE
    examples/counter.cpp
)

# target
add_executable(example_counter_with_struct "")
set_target_properties(example_counter_with_struct PROPERTIES OUTPUT_NAME "example_counter_with_struct")
set_target_properties(example_counter_with_struct PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/linux/x86_64/release")
add_dependencies(example_counter_with_struct prepucio-lib)
target_include_directories(example_counter_with_struct PRIVATE
    include
)
target_include_directories(example_counter_with_struct PRIVATE
    /home/danielboll/.xmake/packages/f/fmt/9.1.0/d363b063d73b40728217e45838c2553c/include
    /home/danielboll/.xmake/packages/p/penis/v1.1.0/ad71be78bd154883a6a79f2010a449b5/include
    /home/danielboll/.xmake/packages/t/tabulate/1.4/f332da4973a7470eb1f7ff02b32fe5d6/include
)
target_compile_options(example_counter_with_struct PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
    $<$<COMPILE_LANGUAGE:C>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-DNDEBUG>
)
set_target_properties(example_counter_with_struct PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(example_counter_with_struct PRIVATE cxx_std_20)
if(MSVC)
    target_compile_options(example_counter_with_struct PRIVATE $<$<CONFIG:Release>:-Ox -fp:fast>)
else()
    target_compile_options(example_counter_with_struct PRIVATE -O3)
endif()
if(MSVC)
else()
    target_compile_options(example_counter_with_struct PRIVATE -fvisibility=hidden)
endif()
if(MSVC)
    set_property(TARGET example_counter_with_struct PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(example_counter_with_struct PRIVATE
    fmt
    penis-lib
    prepucio-lib
)
target_link_directories(example_counter_with_struct PRIVATE
    /home/danielboll/.xmake/packages/f/fmt/9.1.0/d363b063d73b40728217e45838c2553c/lib
    /home/danielboll/.xmake/packages/p/penis/v1.1.0/ad71be78bd154883a6a79f2010a449b5/lib
    build/linux/x86_64/release
)
target_link_options(example_counter_with_struct PRIVATE
    -m64
)
target_sources(example_counter_with_struct PRIVATE
    examples/counter_with_struct.cpp
)

# target
add_executable(example_hello_world "")
set_target_properties(example_hello_world PROPERTIES OUTPUT_NAME "example_hello_world")
set_target_properties(example_hello_world PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/linux/x86_64/release")
add_dependencies(example_hello_world prepucio-lib)
target_include_directories(example_hello_world PRIVATE
    include
)
target_include_directories(example_hello_world PRIVATE
    /home/danielboll/.xmake/packages/f/fmt/9.1.0/d363b063d73b40728217e45838c2553c/include
    /home/danielboll/.xmake/packages/p/penis/v1.1.0/ad71be78bd154883a6a79f2010a449b5/include
    /home/danielboll/.xmake/packages/t/tabulate/1.4/f332da4973a7470eb1f7ff02b32fe5d6/include
)
target_compile_options(example_hello_world PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
    $<$<COMPILE_LANGUAGE:C>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-DNDEBUG>
)
set_target_properties(example_hello_world PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(example_hello_world PRIVATE cxx_std_20)
if(MSVC)
    target_compile_options(example_hello_world PRIVATE $<$<CONFIG:Release>:-Ox -fp:fast>)
else()
    target_compile_options(example_hello_world PRIVATE -O3)
endif()
if(MSVC)
else()
    target_compile_options(example_hello_world PRIVATE -fvisibility=hidden)
endif()
if(MSVC)
    set_property(TARGET example_hello_world PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(example_hello_world PRIVATE
    fmt
    penis-lib
    prepucio-lib
)
target_link_directories(example_hello_world PRIVATE
    /home/danielboll/.xmake/packages/f/fmt/9.1.0/d363b063d73b40728217e45838c2553c/lib
    /home/danielboll/.xmake/packages/p/penis/v1.1.0/ad71be78bd154883a6a79f2010a449b5/lib
    build/linux/x86_64/release
)
target_link_options(example_hello_world PRIVATE
    -m64
)
target_sources(example_hello_world PRIVATE
    examples/hello_world.cpp
)

# target
add_library(prepucio-lib STATIC "")
set_target_properties(prepucio-lib PROPERTIES OUTPUT_NAME "prepucio-lib")
set_target_properties(prepucio-lib PROPERTIES ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/linux/x86_64/release")
target_include_directories(prepucio-lib PRIVATE
    include
)
target_include_directories(prepucio-lib PRIVATE
    /home/danielboll/.xmake/packages/f/fmt/9.1.0/d363b063d73b40728217e45838c2553c/include
    /home/danielboll/.xmake/packages/p/penis/v1.1.0/ad71be78bd154883a6a79f2010a449b5/include
    /home/danielboll/.xmake/packages/t/tabulate/1.4/f332da4973a7470eb1f7ff02b32fe5d6/include
)
target_compile_options(prepucio-lib PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
    $<$<COMPILE_LANGUAGE:C>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-DNDEBUG>
)
set_target_properties(prepucio-lib PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(prepucio-lib PRIVATE cxx_std_20)
if(MSVC)
    target_compile_options(prepucio-lib PRIVATE $<$<CONFIG:Release>:-Ox -fp:fast>)
else()
    target_compile_options(prepucio-lib PRIVATE -O3)
endif()
if(MSVC)
else()
    target_compile_options(prepucio-lib PRIVATE -fvisibility=hidden)
endif()
if(MSVC)
    set_property(TARGET prepucio-lib PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(prepucio-lib PRIVATE
    fmt
    penis-lib
)
target_link_directories(prepucio-lib PRIVATE
    /home/danielboll/.xmake/packages/f/fmt/9.1.0/d363b063d73b40728217e45838c2553c/lib
    /home/danielboll/.xmake/packages/p/penis/v1.1.0/ad71be78bd154883a6a79f2010a449b5/lib
)
target_link_options(prepucio-lib PRIVATE
    -m64
)
target_sources(prepucio-lib PRIVATE
    src/prepucio/utils/string.cpp
)

